{"ast":null,"code":"export var getCity = function getCity(city) {\n  return {\n    type: 'GET_CITY',\n    city: city\n  };\n};\nexport var cityIsLoading = function cityIsLoading(_cityIsLoading) {\n  return {\n    type: 'CITY_IS_LOADING',\n    cityIsLoading: _cityIsLoading\n  };\n};\nexport var fetchCityData = function fetchCityData(name) {\n  return function (dispatch) {\n    console.log(name.match.url);\n    fetch(\"/cities/city/\".concat(name.match.url)).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      dispatch(getCity(result));\n      dispatch(cityIsLoading(false));\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/store/actions/itineraryActions.js"],"names":["getCity","city","type","cityIsLoading","fetchCityData","name","dispatch","console","log","match","url","fetch","then","response","json","result","catch","e"],"mappings":"AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAE,UADH;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,aAAa,GAAG,uBAACA,cAAD,EAAmB;AAC5C,SAAO;AACHD,IAAAA,IAAI,EAAE,iBADH;AAEHC,IAAAA,aAAa,EAAbA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AACnC,SAAO,UAACC,QAAD,EAAc;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,KAAL,CAAWC,GAAvB;AACAC,IAAAA,KAAK,wBAAiBN,IAAI,CAACI,KAAL,CAAWC,GAA5B,EAAL,CACKE,IADL,CACU,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADlB,EAEKF,IAFL,CAEU,UAAAG,MAAM,EAAI;AACZT,MAAAA,QAAQ,CAACN,OAAO,CAACe,MAAD,CAAR,CAAR;AACAT,MAAAA,QAAQ,CAACH,aAAa,CAAC,KAAD,CAAd,CAAR;AACH,KALL,EAMKa,KANL,CAMW,UAAAC,CAAC;AAAA,aAAIV,OAAO,CAACC,GAAR,CAAYS,CAAZ,CAAJ;AAAA,KANZ;AAOH,GATD;AAUH,CAXM","sourcesContent":["export const getCity = (city) => {\n    return {\n        type: 'GET_CITY',\n        city\n    }\n}\n\nexport const cityIsLoading = (cityIsLoading) => {\n    return {\n        type: 'CITY_IS_LOADING',\n        cityIsLoading\n    }\n}\n\nexport const fetchCityData = (name) => {\n    return (dispatch) => {\n        console.log(name.match.url);\n        fetch(`/cities/city/${name.match.url}`)\n            .then(response => response.json())\n            .then(result => {\n                dispatch(getCity(result));\n                dispatch(cityIsLoading(false));\n            })\n            .catch(e => console.log(e));\n    }\n}"]},"metadata":{},"sourceType":"module"}