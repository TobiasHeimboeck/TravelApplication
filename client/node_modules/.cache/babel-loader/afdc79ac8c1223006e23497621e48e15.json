{"ast":null,"code":"import _classCallCheck from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CityPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PreNavbar from '../components/PreNavbar.js';\nimport Sidebar from '../components/Sidebar.js';\nimport * as itineryCreator from '../store/actions/itineraryActions.js';\nimport * as activitiesCreator from '../store/actions/activitiesAction.js';\nimport Itinery from '../components/Itinery.js';\n\nvar CityPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CityPage, _React$Component);\n\n  function CityPage(props) {\n    var _this;\n\n    _classCallCheck(this, CityPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CityPage).call(this, props));\n    _this.activities = [];\n    _this.activitiesForItinery = [];\n    _this.bool = false;\n    return _this;\n  }\n\n  _createClass(CityPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCity(window.location.pathname.replace(\"/\", \"\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.cityIsLoading && this.props.city.city !== \"Error: No Itinerary Found\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(PreNavbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"contentItinery\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, this.props, React.createElement(\"img\", {\n          className: \"cityImage\",\n          src: \"https://wallpapercave.com/wp/wp1826140.jpg\",\n          alt: \"city wallpaper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Moskau\"), React.createElement(\"div\", {\n          id: \"posts\",\n          className: \"itineries\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, this.props.city.city.map(function (item, index) {\n          return React.createElement(Itinery, {\n            key: index,\n            profilePic: item.profilePic,\n            username: item.username,\n            title: item.title,\n            rating: item.rating,\n            duration: item.duration,\n            hashtag: item.hashtag,\n            uuid: item.uuid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          });\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(PreNavbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"no\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"There are no itineries for this city\")), React.createElement(\"i\", {\n          className: \"fas fa-exclamation-triangle noIcon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return CityPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    city: state,\n    cityIsLoading: state.cityIsLoading,\n    activities: state.activities,\n    activitiesIsLoading: state.activitiesIsLoading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCity: function getCity(name) {\n      return dispatch(itineryCreator.fetchCityData(name));\n    },\n    getActivities: function getActivities() {\n      return dispatch(activitiesCreator.fetchActivities());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CityPage);","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CityPage.js"],"names":["React","connect","PreNavbar","Sidebar","itineryCreator","activitiesCreator","Itinery","CityPage","props","activities","activitiesForItinery","bool","getCity","window","location","pathname","replace","cityIsLoading","city","map","item","index","profilePic","username","title","rating","duration","hashtag","uuid","Component","mapStateToProps","state","activitiesIsLoading","mapDispatchToProps","dispatch","name","fetchCityData","getActivities","fetchActivities"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PreNavbar from '../components/PreNavbar.js';\nimport Sidebar from '../components/Sidebar.js';\nimport * as itineryCreator from '../store/actions/itineraryActions.js';\nimport * as activitiesCreator from '../store/actions/activitiesAction.js';\nimport Itinery from '../components/Itinery.js';\n\nclass CityPage extends React.Component {\n   \n    constructor(props) {\n        super(props);\n        this.activities = [];\n        this.activitiesForItinery = [];\n        this.bool = false;\n    }\n\n    componentDidMount() {\n        this.props.getCity(window.location.pathname.replace(\"/\", \"\"));\n    }\n\n    render() {\n        if (!this.props.cityIsLoading && this.props.city.city !== \"Error: No Itinerary Found\") {\n            return (\n                <div>\n                    <Sidebar />\n                    <PreNavbar />\n                    <div className=\"contentItinery\">\n                        {this.props}\n                        <img className=\"cityImage\" src=\"https://wallpapercave.com/wp/wp1826140.jpg\" alt=\"city wallpaper\"></img>\n                        <h1>Moskau</h1>\n                        <div id=\"posts\" className=\"itineries\">\n                            {this.props.city.city.map((item, index) => (\n                                <Itinery key={index} profilePic={item.profilePic} username={item.username} title={item.title} rating={item.rating} duration={item.duration} hashtag={item.hashtag} uuid={item.uuid} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Sidebar />\n                    <PreNavbar />\n                    <div className=\"no\">\n                        <p>There are no itineries for this city</p>\n                    </div>\n                    <i className=\"fas fa-exclamation-triangle noIcon\"></i>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {city: state, cityIsLoading: state.cityIsLoading, activities: state.activities, activitiesIsLoading: state.activitiesIsLoading};\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getCity: name => dispatch(itineryCreator.fetchCityData(name)),\n        getActivities: () => dispatch(activitiesCreator.fetchActivities()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CityPage);"]},"metadata":{},"sourceType":"module"}