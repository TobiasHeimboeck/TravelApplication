{"ast":null,"code":"import _classCallCheck from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CityPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PreNavbar from '../components/PreNavbar.js';\nimport Sidebar from '../components/Sidebar.js';\nimport * as itineryCreator from '../store/actions/itineraryActions.js';\nimport * as activitiesCreator from '../store/actions/activitiesAction.js';\n\nvar CityPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CityPage, _React$Component);\n\n  function CityPage(props) {\n    var _this;\n\n    _classCallCheck(this, CityPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CityPage).call(this, props));\n    _this.activities = [];\n    _this.activitiesForItinery = [];\n    _this.bool = false;\n    return _this;\n  }\n\n  _createClass(CityPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCity(window.location.pathname.replace(\"/\", \"\"));\n      this.props.getActivities();\n    }\n  }, {\n    key: \"getActivitiesForItinery\",\n    value: function getActivitiesForItinery(uuid) {\n      this.activities = this.props.activities;\n      var array = [];\n\n      for (var i = 0; i < this.activities.length; i++) {\n        if (this.activities[i].uuid === uuid) {\n          array.push(this.activities[i]);\n        }\n      }\n\n      this.activitiesForItinery = array;\n      this.bool = true;\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(element) {\n      var parent = element.parentNode;\n\n      if (!parent.hasAttribute(\"openend\")) {\n        parent.setAttribute(\"openend\", true);\n\n        for (var i = 0; i < document.getElementsByClassName(\"itinery\").length; i++) {\n          if (!document.getElementsByClassName(\"itinery\")[i].hasAttribute(\"openend\")) {\n            document.getElementsByClassName(\"itinery\")[i].style.display = \"none\";\n          }\n        }\n\n        parent.scrollIntoView(true);\n        parent.classList.add(\"open\");\n        var p = document.createElement(\"p\");\n        p.setAttribute(\"id\", \"head\");\n        p.innerHTML = \"Avilable activities\";\n        parent.appendChild(p);\n\n        if (this.activitiesForItinery.length > 0) {\n          for (var e = 0; e < this.activitiesForItinery.length; e++) {\n            var activity = this.activitiesForItinery[e];\n\n            if (activity !== null) {\n              var div = document.createElement(\"div\");\n              div.setAttribute(\"class\", \"activity\");\n              div.innerHTML = activity.text;\n              div.style.backgroundImage = \"url('\" + activity.image + \"')\";\n              parent.appendChild(div);\n            }\n          }\n        } else {\n          console.log(\"No activities avilable\");\n        }\n\n        var input = document.createElement(\"input\");\n        input.setAttribute(\"id\", \"inputActivity\");\n        input.placeholder = \"Your comment...\";\n        parent.appendChild(input);\n      } else {\n        var paras = document.getElementsByClassName('activity'); // parent.removeChild(document.getElementById(\"head\"));\n\n        console.log(parent);\n        parent.removeChild(document.getElementById(\"inputActivity\"));\n\n        while (paras[0]) {\n          paras[0].parentNode.removeChild(paras[0]);\n        }\n\n        for (var c = 0; c < document.getElementsByClassName(\"itinery\").length; c++) {\n          if (!document.getElementsByClassName(\"itinery\")[c].hasAttribute(\"openend\")) {\n            document.getElementsByClassName(\"itinery\")[c].style.display = \"block\";\n          }\n        }\n\n        parent.removeAttribute(\"openend\");\n        parent.classList.remove(\"open\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.cityIsLoading && this.props.city.city !== \"Error: No Itinerary Found\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(PreNavbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"contentItinery\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"cityImage\",\n          src: \"https://wallpapercave.com/wp/wp1826140.jpg\",\n          alt: \"city wallpaper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Moskau\"), React.createElement(\"div\", {\n          id: \"posts\",\n          className: \"itineries\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, this.props.city.city.map(function (item, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            className: \"itinery\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"profileImage\",\n            src: item.profilePic === \"\" ? \"https://immedilet-invest.com/wp-content/uploads/2016/01/user-placeholder.jpg\" : item.profilePic,\n            alt: \"profile wallpaper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, item.username)), React.createElement(\"h1\", {\n            className: \"itineryStatus\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, item.title), React.createElement(\"i\", {\n            id: \"expander\",\n            onClick: function onClick(event) {\n              _this2.getActivitiesForItinery(item.uuid);\n\n              _this2.expand(event.target);\n            },\n            className: \"fa fa-expand-arrows-alt expand\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            className: \"likes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \" Likes: \", item.rating, \" \"), React.createElement(\"li\", {\n            className: \"hours\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, \" \", item.duration, \" Hours \")), React.createElement(\"ul\", {\n            className: \"review\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, item.hashtag.map(function (itemm, indexx) {\n            return React.createElement(\"li\", {\n              key: indexx,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118\n              },\n              __self: this\n            }, itemm);\n          })));\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }), React.createElement(PreNavbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"no\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"There are no itineries for this city\")), React.createElement(\"i\", {\n          className: \"fas fa-exclamation-triangle noIcon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return CityPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    city: state,\n    cityIsLoading: state.cityIsLoading,\n    activities: state.activities,\n    activitiesIsLoading: state.activitiesIsLoading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCity: function getCity(name) {\n      return dispatch(itineryCreator.fetchCityData(name));\n    },\n    getActivities: function getActivities() {\n      return dispatch(activitiesCreator.fetchActivities());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CityPage);","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CityPage.js"],"names":["React","connect","PreNavbar","Sidebar","itineryCreator","activitiesCreator","CityPage","props","activities","activitiesForItinery","bool","getCity","window","location","pathname","replace","getActivities","uuid","array","i","length","push","element","parent","parentNode","hasAttribute","setAttribute","document","getElementsByClassName","style","display","scrollIntoView","classList","add","p","createElement","innerHTML","appendChild","e","activity","div","text","backgroundImage","image","console","log","input","placeholder","paras","removeChild","getElementById","c","removeAttribute","remove","cityIsLoading","city","map","item","index","profilePic","username","title","event","getActivitiesForItinery","expand","target","rating","duration","hashtag","itemm","indexx","Component","mapStateToProps","state","activitiesIsLoading","mapDispatchToProps","dispatch","name","fetchCityData","fetchActivities"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PreNavbar from '../components/PreNavbar.js';\nimport Sidebar from '../components/Sidebar.js';\nimport * as itineryCreator from '../store/actions/itineraryActions.js';\nimport * as activitiesCreator from '../store/actions/activitiesAction.js';\n\nclass CityPage extends React.Component {\n   \n    constructor(props) {\n        super(props);\n        this.activities = [];\n        this.activitiesForItinery = [];\n        this.bool = false;\n    }\n\n    componentDidMount() {\n        this.props.getCity(window.location.pathname.replace(\"/\", \"\"));\n        this.props.getActivities();\n    }\n\n    getActivitiesForItinery(uuid) {\n        this.activities = this.props.activities;\n        var array = [];\n        for (var i = 0; i < this.activities.length; i++) {\n            if (this.activities[i].uuid === uuid) {\n                array.push(this.activities[i]);\n            }\n        }\n        this.activitiesForItinery = array;\n        this.bool = true;\n    }\n\n    expand(element) {\n        var parent = element.parentNode;\n        if (!parent.hasAttribute(\"openend\")) {\n            parent.setAttribute(\"openend\", true);\n            for (var i = 0; i < document.getElementsByClassName(\"itinery\").length; i++) {\n                if (!document.getElementsByClassName(\"itinery\")[i].hasAttribute(\"openend\")) {\n                    document.getElementsByClassName(\"itinery\")[i].style.display = \"none\";\n                }\n            }\n\n            parent.scrollIntoView(true);\n            parent.classList.add(\"open\");\n\n            var p = document.createElement(\"p\");\n            p.setAttribute(\"id\", \"head\");\n            p.innerHTML = \"Avilable activities\";\n            parent.appendChild(p);\n\n            if (this.activitiesForItinery.length > 0) {\n                for (var e = 0; e < this.activitiesForItinery.length; e++) {\n                    var activity = this.activitiesForItinery[e];\n                    if (activity !== null) {\n                        var div = document.createElement(\"div\");\n                        div.setAttribute(\"class\", \"activity\");\n                        div.innerHTML = activity.text;\n                        div.style.backgroundImage = \"url('\" + activity.image + \"')\";\n                        parent.appendChild(div);\n                    }\n                }\n            } else {\n                console.log(\"No activities avilable\");\n            }\n\n            var input = document.createElement(\"input\");\n            input.setAttribute(\"id\", \"inputActivity\");\n            input.placeholder = \"Your comment...\";\n            parent.appendChild(input);\n\n        } else {\n            var paras = document.getElementsByClassName('activity');\n            \n            // parent.removeChild(document.getElementById(\"head\"));\n            console.log(parent);\n            parent.removeChild(document.getElementById(\"inputActivity\"));\n\n            while(paras[0]) {\n                paras[0].parentNode.removeChild(paras[0]);\n            }\n\n            for (var c = 0; c < document.getElementsByClassName(\"itinery\").length; c++) {\n                if (!document.getElementsByClassName(\"itinery\")[c].hasAttribute(\"openend\")) {\n                    document.getElementsByClassName(\"itinery\")[c].style.display = \"block\";\n                }\n            }\n\n            parent.removeAttribute(\"openend\");\n            parent.classList.remove(\"open\");\n        }\n    }\n\n    render() {\n        if (!this.props.cityIsLoading && this.props.city.city !== \"Error: No Itinerary Found\") {\n            return (\n                <div>\n                    <Sidebar />\n                    <PreNavbar />\n                    <div className=\"contentItinery\">\n                        <img className=\"cityImage\" src=\"https://wallpapercave.com/wp/wp1826140.jpg\" alt=\"city wallpaper\"></img>\n                        <h1>Moskau</h1>\n                        <div id=\"posts\" className=\"itineries\">\n                            {this.props.city.city.map((item, index) => (\n                                <div key={index} className=\"itinery\">\n                                    <div className=\"profile\">\n                                    <img className=\"profileImage\" src={item.profilePic === \"\" ? \"https://immedilet-invest.com/wp-content/uploads/2016/01/user-placeholder.jpg\" : item.profilePic} alt=\"profile wallpaper\"></img>\n                                        <p>{item.username}</p>\n                                    </div>\n                                    <h1 className=\"itineryStatus\">{item.title}</h1>\n                                    <i id=\"expander\" onClick={(event) => {this.getActivitiesForItinery(item.uuid); this.expand(event.target);}} className=\"fa fa-expand-arrows-alt expand\"></i>\n                                    <ul>\n                                        <li className=\"likes\"> Likes: {item.rating} </li>\n                                        <li className=\"hours\"> {item.duration} Hours </li>\n                                    </ul>\n                                    <ul className=\"review\">\n                                        {item.hashtag.map((itemm, indexx) => (\n                                            <li key={indexx}>{itemm}</li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Sidebar />\n                    <PreNavbar />\n                    <div className=\"no\">\n                        <p>There are no itineries for this city</p>\n                    </div>\n                    <i className=\"fas fa-exclamation-triangle noIcon\"></i>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {city: state, cityIsLoading: state.cityIsLoading, activities: state.activities, activitiesIsLoading: state.activitiesIsLoading};\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getCity: name => dispatch(itineryCreator.fetchCityData(name)),\n        getActivities: () => dispatch(activitiesCreator.fetchActivities()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CityPage);"]},"metadata":{},"sourceType":"module"}