{"ast":null,"code":"export var getCities = function getCities(cities) {\n  return {\n    type: 'GET_CITIES',\n    cities: cities\n  };\n};\nexport var citiesIsLoading = function citiesIsLoading(_citiesIsLoading) {\n  return {\n    type: 'CITIES_IS_LOADING',\n    citiesIsLoading: _citiesIsLoading\n  };\n};\nexport var fetchCityData = function fetchCityData(name) {\n  return function (dispatch) {\n    fetch(\"/cities/\" + name).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      dispatch(getCities(result));\n      dispatch(citiesIsLoading(false));\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n};\nexport var fetchCitiesData = function fetchCitiesData() {\n  return function (dispatch) {\n    fetch(\"/cities/all\").then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      dispatch(getCities(result));\n      dispatch(citiesIsLoading(false));\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/store/actions/actions.js"],"names":["getCities","cities","type","citiesIsLoading","fetchCityData","name","dispatch","fetch","then","response","json","result","catch","e","console","log","fetchCitiesData"],"mappings":"AAAA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,YADH;AAEHD,IAAAA,MAAM,EAANA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,eAAe,GAAG,yBAACA,gBAAD,EAAqB;AAChD,SAAO;AACHD,IAAAA,IAAI,EAAE,mBADH;AAEHC,IAAAA,eAAe,EAAfA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AACnC,SAAO,UAACC,QAAD,EAAc;AACjBC,IAAAA,KAAK,CAAC,aAAaF,IAAd,CAAL,CACKG,IADL,CACU,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADlB,EAEKF,IAFL,CAEU,UAAAG,MAAM,EAAI;AACZL,MAAAA,QAAQ,CAACN,SAAS,CAACW,MAAD,CAAV,CAAR;AACAL,MAAAA,QAAQ,CAACH,eAAe,CAAC,KAAD,CAAhB,CAAR;AACH,KALL,EAMKS,KANL,CAMW,UAAAC,CAAC;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,KANZ;AAOH,GARD;AASH,CAVM;AAYP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,SAAO,UAACV,QAAD,EAAc;AACjBC,IAAAA,KAAK,CAAC,aAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;AACZL,MAAAA,QAAQ,CAACN,SAAS,CAACW,MAAD,CAAV,CAAR;AACAL,MAAAA,QAAQ,CAACH,eAAe,CAAC,KAAD,CAAhB,CAAR;AACL,KALC,EAMDS,KANC,CAMK,UAAAC,CAAC;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,KANN;AAOH,GARD;AASH,CAVM","sourcesContent":["export const getCities = (cities) => {\n    return {\n        type: 'GET_CITIES',\n        cities\n    }\n}\n\nexport const citiesIsLoading = (citiesIsLoading) => {\n    return {\n        type: 'CITIES_IS_LOADING',\n        citiesIsLoading\n    }\n}\n\nexport const fetchCityData = (name) => {\n    return (dispatch) => {\n        fetch(\"/cities/\" + name)\n            .then(response => response.json())\n            .then(result => {\n                dispatch(getCities(result));\n                dispatch(citiesIsLoading(false));\n            })\n            .catch(e => console.log(e));\n    }\n}\n\nexport const fetchCitiesData = () => {\n    return (dispatch) => {\n        fetch(\"/cities/all\")\n        .then(response => response.json())\n        .then(result => {\n            dispatch(getCities(result));\n            dispatch(citiesIsLoading(false));\n      })\n      .catch(e => console.log(e));\n    }\n}"]},"metadata":{},"sourceType":"module"}