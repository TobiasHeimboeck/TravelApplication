{"ast":null,"code":"import _classCallCheck from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js\";\nimport React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nvar CitiesPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CitiesPage, _React$Component);\n\n  function CitiesPage(props) {\n    var _this;\n\n    _classCallCheck(this, CitiesPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CitiesPage).call(this, props));\n\n    _this.handle = function (filter) {\n      filteredCities = filteredCities.filter(function (city) {\n        var name = city.name.toLowerCase();\n        return name.indexOf(filter.target.value.toLowerCase()) !== -1;\n      });\n    };\n\n    _this.handleFilterInput = function (cityFilter) {\n      var filteredCities = _this.props.cities;\n      filteredCities = filteredCities.filter(function (city) {\n        var cityName = city.name.toLowerCase();\n        return cityName.indexOf(cityFilter.target.value.toLowerCase()) !== -1;\n      });\n\n      _this.setState({\n        filteredCities: filteredCities\n      });\n    };\n\n    _this.state = {\n      filteredCities: []\n    };\n    return _this;\n  }\n\n  _createClass(CitiesPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCities();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.citiesIsLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        if (this.state.filteredCities.length > 0) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(Sidebar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }), React.createElement(PreNavbar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            value: this.state.cityFilter,\n            onChange: this.handleFilterInput,\n            className: \"cityFilter\",\n            type: \"text\",\n            placeholder: \"Search a city\",\n            name: \"Search city\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }), this.state.filteredCities.map(function (item, index) {\n            return React.createElement(City, {\n              name: item.name,\n              image: item.image,\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            });\n          })));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(Sidebar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }), React.createElement(PreNavbar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            value: this.state.cityFilter,\n            onChange: this.handleFilterInput,\n            className: \"cityFilter\",\n            type: \"text\",\n            placeholder: \"Search a city\",\n            name: \"Search city\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }), this.props.cities.map(function (item, index) {\n            return React.createElement(City, {\n              name: item.name,\n              image: item.image,\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            });\n          })));\n        }\n      }\n    }\n  }]);\n\n  return CitiesPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities,\n    city: state.city,\n    citiesIsLoading: state.citiesIsLoading\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCities: function getCities() {\n      return dispatch(actionCreator.fetchCitiesData());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPage);","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js"],"names":["React","Sidebar","PreNavbar","City","connect","actionCreator","CitiesPage","props","handle","filter","filteredCities","city","name","toLowerCase","indexOf","target","value","handleFilterInput","cityFilter","cities","cityName","setState","state","getCities","citiesIsLoading","length","map","item","index","image","Component","mapStateToProps","mapDispatchToProps","dispatch","fetchCitiesData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nclass CitiesPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filteredCities: [],\n        };\n    }\n\n    componentDidMount() {\n        this.props.getCities();\n    }\n\n    handle = (filter) => {\n        filteredCities = filteredCities.filter((city) => {\n            let name = city.name.toLowerCase();\n            return name.indexOf(filter.target.value.toLowerCase()) !== -1;\n        });\n    }\n\n    handleFilterInput = (cityFilter) => {\n        let filteredCities = this.props.cities;\n\n        filteredCities = filteredCities.filter((city) => {\n            let cityName = city.name.toLowerCase();\n            return cityName.indexOf(cityFilter.target.value.toLowerCase()) !== -1;\n        })\n        \n        this.setState({filteredCities});\n    }\n\n    render() {\n        if (this.props.citiesIsLoading) {\n            return <div>Loading...</div>;\n        } else {\n            if (this.state.filteredCities.length > 0) {\n                return (\n                    <div>\n                        <Sidebar />\n                        <PreNavbar />\n                        <div>\n                            <input value={this.state.cityFilter} onChange={this.handleFilterInput} className=\"cityFilter\" type=\"text\" placeholder=\"Search a city\" name=\"Search city\"></input>\n                            {this.state.filteredCities.map((item, index) => (\n                                <City name={item.name} image={item.image} key={index} />\n                            ))}\n                        </div>\n                    </div>\n                ); \n            } else {\n                return (\n                    <div>\n                        <Sidebar />\n                        <PreNavbar />\n                        <div>\n                            <input value={this.state.cityFilter} onChange={this.handleFilterInput} className=\"cityFilter\" type=\"text\" placeholder=\"Search a city\" name=\"Search city\"></input>\n                            {this.props.cities.map((item, index) => (\n                                <City name={item.name} image={item.image} key={index} />\n                            ))}\n                        </div>\n                    </div>\n                ); \n            }\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {cities: state.cities, city: state.city, citiesIsLoading: state.citiesIsLoading}\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getCities: () => dispatch(actionCreator.fetchCitiesData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CitiesPage);"]},"metadata":{},"sourceType":"module"}