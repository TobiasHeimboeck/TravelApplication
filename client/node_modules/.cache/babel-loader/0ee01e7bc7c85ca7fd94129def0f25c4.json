{"ast":null,"code":"import _classCallCheck from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js\";\nimport React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nvar CitiesPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CitiesPage, _React$Component);\n\n  function CitiesPage() {\n    var _this;\n\n    _classCallCheck(this, CitiesPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CitiesPage).call(this));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        cityFilter: e.target.value\n      });\n    };\n\n    _this.state = {\n      cityFilter: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CitiesPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCities();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.citiesIsLoading) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Loading...\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(PreNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"header\",\n        className: \"cityTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Cities\"), React.createElement(\"input\", {\n        value: this.state.cityFilter,\n        onChange: this.handleChange,\n        className: \"cityFilter\",\n        type: \"text\",\n        placeholder: \"Search a city\",\n        name: \"Search city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), this.props.cities.map(function (item, index) {\n        return React.createElement(City, {\n          name: item.name,\n          image: item.image,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return CitiesPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities,\n    citiesIsLoading: state.citiesIsLoading\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCities: function getCities() {\n      return dispatch(actionCreator.fetchCitiesData());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPage);","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js"],"names":["React","Sidebar","PreNavbar","City","connect","actionCreator","CitiesPage","handleChange","e","setState","cityFilter","target","value","state","props","getCities","citiesIsLoading","cities","map","item","index","name","image","Component","mapStateToProps","mapDispatchToProps","dispatch","fetchCitiesData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,6BAA/B;;IAEMC,U;;;;;AACF,wBAAc;AAAA;;AAAA;;AACV;;AADU,UAOdC,YAPc,GAOC,UAACC,CAAD,EAAO;AAClB,YAAKC,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAEF,CAAC,CAACG,MAAF,CAASC;AADX,OAAd;AAGH,KAXa;;AAEV,UAAKC,KAAL,GAAa;AACTH,MAAAA,UAAU,EAAE;AADH,KAAb;AAFU;AAKb;;;;wCAQmB;AAChB,WAAKI,KAAL,CAAWC,SAAX;AACH;;;6BAEQ;AACL,UAAI,KAAKD,KAAL,CAAWE,eAAf,EACI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAEJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,QAAP;AAAgB,QAAA,SAAS,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWH,UAAzB;AAAqC,QAAA,QAAQ,EAAE,KAAKH,YAApD;AAAkE,QAAA,SAAS,EAAC,YAA5E;AAAyF,QAAA,IAAI,EAAC,MAA9F;AAAqG,QAAA,WAAW,EAAC,eAAjH;AAAiI,QAAA,IAAI,EAAC,aAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAIQ,KAAKO,KAAL,CAAWG,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAOC,KAAP;AAAA,eAClB,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAED,IAAI,CAACE,IAAjB;AAAuB,UAAA,KAAK,EAAEF,IAAI,CAACG,KAAnC;AAA0C,UAAA,GAAG,EAAEF,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADkB;AAAA,OAAtB,CAJR,CAHA,CADJ;AAeH;;;;EArCoBpB,KAAK,CAACuB,S;;AAwC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACX,KAAD,EAAW;AAC/B,SAAO;AACHI,IAAAA,MAAM,EAAEJ,KAAK,CAACI,MADX;AAEHD,IAAAA,eAAe,EAAEH,KAAK,CAACG;AAFpB,GAAP;AAIH,CALD;;AAOA,SAASS,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHX,IAAAA,SAAS,EAAE;AAAA,aAAMW,QAAQ,CAACrB,aAAa,CAACsB,eAAd,EAAD,CAAd;AAAA;AADR,GAAP;AAGH;;AAED,eAAevB,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA8CnB,UAA9C,CAAf","sourcesContent":["import React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nclass CitiesPage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            cityFilter: \"\"\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            cityFilter: e.target.value\n        });\n    }\n    \n    componentDidMount() {\n        this.props.getCities();\n    }\n    \n    render() {\n        if (this.props.citiesIsLoading) \n            return <div>Loading...</div>;\n\n        return (\n            <div>\n                <Sidebar />\n                <PreNavbar />\n            <div>\n                <h1 id=\"header\" className=\"cityTitle\">Cities</h1>\n                <input value={this.state.cityFilter} onChange={this.handleChange} className=\"cityFilter\" type=\"text\" placeholder=\"Search a city\" name=\"Search city\"></input>\n                {\n                    this.props.cities.map((item, index) => (\n                        <City name={item.name} image={item.image} key={index} />\n                    )) \n                }\n            </div>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cities: state.cities,\n        citiesIsLoading: state.citiesIsLoading\n    }\n}\n  \nfunction mapDispatchToProps(dispatch) {\n    return {\n        getCities: () => dispatch(actionCreator.fetchCitiesData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CitiesPage);"]},"metadata":{},"sourceType":"module"}