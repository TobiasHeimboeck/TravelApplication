{"ast":null,"code":"import _objectSpread from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initState = {\n  cities: [],\n  city: [],\n  activities: []\n};\nexport var rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_ACTIVITIES':\n      {\n        state = _objectSpread({}, state, {\n          activities: action.activities\n        });\n      }\n\n    case 'ACTIVITIES_IS_LOADING':\n      {\n        state = _objectSpread({}, state, {\n          activitiesIsLoading: action.activitiesIsLoading\n        });\n      }\n\n    case 'GET_CITIES':\n      state = _objectSpread({}, state, {\n        cities: action.cities\n      });\n      break;\n\n    case 'CITIES_IS_LOADING':\n      {\n        state = _objectSpread({}, state, {\n          citiesIsLoading: action.citiesIsLoading\n        });\n      }\n\n    case 'GET_CITY':\n      {\n        state = _objectSpread({}, state, {\n          city: action.city.message\n        });\n      }\n\n    case 'CITY_IS_LOADING':\n      {\n        state = _objectSpread({}, state, {\n          cityIsLoading: action.cityIsLoading\n        });\n      }\n\n    default:\n      break;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/store/reducers/rootReducder.js"],"names":["initState","cities","city","activities","rootReducer","state","action","type","activitiesIsLoading","citiesIsLoading","message","cityIsLoading"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,EADM;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAlB;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAXM,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AAAuB;AACnBF,QAAAA,KAAK,qBACEA,KADF;AAEDF,UAAAA,UAAU,EAAEG,MAAM,CAACH;AAFlB,UAAL;AAIH;;AACD,SAAK,uBAAL;AAA8B;AAC1BE,QAAAA,KAAK,qBACEA,KADF;AAEDG,UAAAA,mBAAmB,EAAEF,MAAM,CAACE;AAF3B,UAAL;AAIH;;AACD,SAAK,YAAL;AACIH,MAAAA,KAAK,qBACEA,KADF;AAEDJ,QAAAA,MAAM,EAAEK,MAAM,CAACL;AAFd,QAAL;AAIA;;AACJ,SAAK,mBAAL;AAA0B;AACtBI,QAAAA,KAAK,qBACEA,KADF;AAEDI,UAAAA,eAAe,EAAEH,MAAM,CAACG;AAFvB,UAAL;AAIH;;AACD,SAAK,UAAL;AAAiB;AACbJ,QAAAA,KAAK,qBACEA,KADF;AAEDH,UAAAA,IAAI,EAAEI,MAAM,CAACJ,IAAP,CAAYQ;AAFjB,UAAL;AAIH;;AACD,SAAK,iBAAL;AAAwB;AACpBL,QAAAA,KAAK,qBACEA,KADF;AAEDM,UAAAA,aAAa,EAAEL,MAAM,CAACK;AAFrB,UAAL;AAIH;;AACD;AACI;AAtCR;;AAyCA,SAAON,KAAP;AACH,CA3CM","sourcesContent":["const initState = {\n    cities: [],\n    city: [],\n    activities: []\n};\n\nexport const rootReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'GET_ACTIVITIES': {\n            state = {\n                ...state,\n                activities: action.activities\n            }   \n        }\n        case 'ACTIVITIES_IS_LOADING': {\n            state = {\n                ...state,\n                activitiesIsLoading: action.activitiesIsLoading\n            }\n        }\n        case 'GET_CITIES':\n            state = {\n                ...state,\n                cities: action.cities\n            }\n            break;\n        case 'CITIES_IS_LOADING': {\n            state = {\n                ...state,\n                citiesIsLoading: action.citiesIsLoading\n            }\n        }\n        case 'GET_CITY': {\n            state = {\n                ...state,\n                city: action.city.message\n            }\n        }\n        case 'CITY_IS_LOADING': {\n            state = {\n                ...state,\n                cityIsLoading: action.cityIsLoading\n            }\n        }\n        default:\n            break;\n    }\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}