{"ast":null,"code":"import _classCallCheck from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js\";\nimport React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nvar CitiesPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CitiesPage, _React$Component);\n\n  function CitiesPage() {\n    _classCallCheck(this, CitiesPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CitiesPage).apply(this, arguments));\n  }\n\n  _createClass(CitiesPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCities();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.citiesIsLoading) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Loading...\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(PreNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"header\",\n        className: \"cityTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Cities\"), this.props.cities.map(function (item, index) {\n        return React.createElement(City, {\n          name: item.name,\n          image: item.image,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return CitiesPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities,\n    citiesIsLoading: state.citiesIsLoading\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCities: function getCities() {\n      return dispatch(actionCreator.fetchCitiesData());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPage);","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js"],"names":["React","Sidebar","PreNavbar","City","connect","actionCreator","CitiesPage","props","getCities","citiesIsLoading","cities","map","item","index","name","image","Component","mapStateToProps","state","mapDispatchToProps","dispatch","fetchCitiesData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,6BAA/B;;IAEMC,U;;;;;;;;;;;;;wCAEkB;AAChB,WAAKC,KAAL,CAAWC,SAAX;AACH;;;6BAEQ;AACL,UAAI,KAAKD,KAAL,CAAWE,eAAf,EAAgC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAEhC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,QAAP;AAAgB,QAAA,SAAS,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAOC,KAAP;AAAA,eACnB,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAED,IAAI,CAACE,IAAjB;AAAuB,UAAA,KAAK,EAAEF,IAAI,CAACG,KAAnC;AAA0C,UAAA,GAAG,EAAEF,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADmB;AAAA,OAAtB,CAFL,CAHA,CADJ;AAYH;;;;EArBoBb,KAAK,CAACgB,S;;AAwB/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHR,IAAAA,MAAM,EAAEQ,KAAK,CAACR,MADX;AAEHD,IAAAA,eAAe,EAAES,KAAK,CAACT;AAFpB,GAAP;AAIH,CALD;;AAOA,SAASU,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHZ,IAAAA,SAAS,EAAE;AAAA,aAAMY,QAAQ,CAACf,aAAa,CAACgB,eAAd,EAAD,CAAd;AAAA;AADR,GAAP;AAGH;;AAED,eAAejB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA8Cb,UAA9C,CAAf","sourcesContent":["import React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nclass CitiesPage extends React.Component {\n    \n    componentDidMount() {\n        this.props.getCities();\n    }\n\n    render() {\n        if (this.props.citiesIsLoading) return <div>Loading...</div>;\n        \n        return (\n            <div>\n                <Sidebar />\n                <PreNavbar />\n            <div>\n                <h1 id=\"header\" className=\"cityTitle\">Cities</h1>\n                {this.props.cities.map((item, index) => (\n                    <City name={item.name} image={item.image} key={index} />   \n                ))}\n            </div>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cities: state.cities,\n        citiesIsLoading: state.citiesIsLoading\n    }\n}\n  \nfunction mapDispatchToProps(dispatch) {\n    return {\n        getCities: () => dispatch(actionCreator.fetchCitiesData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CitiesPage);"]},"metadata":{},"sourceType":"module"}