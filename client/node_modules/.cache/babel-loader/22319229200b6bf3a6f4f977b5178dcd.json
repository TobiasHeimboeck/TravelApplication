{"ast":null,"code":"import _classCallCheck from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js\";\nimport React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nvar CitiesPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CitiesPage, _React$Component);\n\n  function CitiesPage(props) {\n    var _this;\n\n    _classCallCheck(this, CitiesPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CitiesPage).call(this, props));\n\n    _this.handleFilterInput = function (cityFilter) {\n      var filteredCities = _this.props.cities; // console.log(filteredCities);\n\n      console.log(cityFilter.target.value);\n      filteredCities = filteredCities.filter(function (city) {\n        var cityName = city.name.toLowerCase();\n        return cityName.indexOf(cityFilter.target.value.toLowerCase()) !== -1;\n      });\n\n      _this.setState({\n        filteredCities: filteredCities\n      });\n\n      console.log(_this.state.filteredCities);\n    };\n\n    _this.state = {\n      cities: [],\n      filteredCities: []\n    };\n    return _this;\n  }\n\n  _createClass(CitiesPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCities();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.citiesIsLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(PreNavbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          id: \"header\",\n          className: \"cityTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Cities\"), React.createElement(\"input\", {\n          value: this.state.cityFilter,\n          onChange: this.handleFilterInput,\n          className: \"cityFilter\",\n          type: \"text\",\n          placeholder: \"Search a city\",\n          name: \"Search city\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), this.state.cities.map(function (item, index) {\n          return React.createElement(City, {\n            name: item.name,\n            image: item.image,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          });\n        })));\n      }\n    }\n  }]);\n\n  return CitiesPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities,\n    city: state.city,\n    citiesIsLoading: state.citiesIsLoading\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCities: function getCities() {\n      return dispatch(actionCreator.fetchCitiesData());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPage);","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js"],"names":["React","Sidebar","PreNavbar","City","connect","actionCreator","CitiesPage","props","handleFilterInput","cityFilter","filteredCities","cities","console","log","target","value","filter","city","cityName","name","toLowerCase","indexOf","setState","state","getCities","citiesIsLoading","map","item","index","image","Component","mapStateToProps","mapDispatchToProps","dispatch","fetchCitiesData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nclass CitiesPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cities: [], \n            filteredCities: []\n        };\n    }\n\n    componentDidMount() {\n        this.props.getCities();\n    }\n\n    handleFilterInput = (cityFilter) => {\n        let filteredCities = this.props.cities\n\n        // console.log(filteredCities);\n\n        console.log(cityFilter.target.value);\n        \n        filteredCities = filteredCities.filter((city) => {\n            let cityName = city.name.toLowerCase();\n            return cityName.indexOf(cityFilter.target.value.toLowerCase()) !== -1;\n        })\n\n        this.setState({filteredCities});\n        console.log(this.state.filteredCities);\n    }\n\n    render() {\n        if (this.props.citiesIsLoading) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <div>\n                    <Sidebar />\n                    <PreNavbar />\n                    <div>\n                        <h1 id=\"header\" className=\"cityTitle\">Cities</h1>\n                        <input value={this.state.cityFilter} onChange={this.handleFilterInput} className=\"cityFilter\" type=\"text\" placeholder=\"Search a city\" name=\"Search city\"></input>\n                        {\n                            this.state.cities.map((item, index) => (\n                                <City name={item.name} image={item.image} key={index} />\n                            ))\n                        }\n                    </div>\n                </div>\n            ); \n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {cities: state.cities, city: state.city, citiesIsLoading: state.citiesIsLoading}\n}\n  \nfunction mapDispatchToProps(dispatch) {\n    return {\n        getCities: () => dispatch(actionCreator.fetchCitiesData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CitiesPage);"]},"metadata":{},"sourceType":"module"}