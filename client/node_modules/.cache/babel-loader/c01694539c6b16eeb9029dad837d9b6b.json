{"ast":null,"code":"import _objectSpread from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initState = {\n  cities: [],\n  city: [],\n  activities: []\n};\nexport var rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_ACTIVITIES':\n      state = _objectSpread({}, state, {\n        activities: action.activities\n      });\n      break;\n\n    case 'ACTIVITIES_IS_LOADING':\n      state = _objectSpread({}, state, {\n        activitiesIsLoading: action.activitiesIsLoading\n      });\n      break;\n\n    case 'GET_CITIES':\n      state = _objectSpread({}, state, {\n        cities: action.cities\n      });\n      break;\n\n    case 'CITIES_IS_LOADING':\n      state = _objectSpread({}, state, {\n        citiesIsLoading: action.citiesIsLoading\n      });\n      break;\n\n    case 'GET_CITY':\n      state = _objectSpread({}, state, {\n        city: action.city.message\n      });\n      break;\n\n    case 'CITY_IS_LOADING':\n      state = _objectSpread({}, state, {\n        cityIsLoading: action.cityIsLoading\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/store/reducers/rootReducder.js"],"names":["initState","cities","city","activities","rootReducer","state","action","type","activitiesIsLoading","citiesIsLoading","message","cityIsLoading"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,EADM;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAlB;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAXM,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACIF,MAAAA,KAAK,qBAAQA,KAAR;AAAeF,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAAlC,QAAL;AACA;;AACJ,SAAK,uBAAL;AACIE,MAAAA,KAAK,qBAAQA,KAAR;AAAeG,QAAAA,mBAAmB,EAAEF,MAAM,CAACE;AAA3C,QAAL;AACA;;AACJ,SAAK,YAAL;AACIH,MAAAA,KAAK,qBAAQA,KAAR;AAAeJ,QAAAA,MAAM,EAAEK,MAAM,CAACL;AAA9B,QAAL;AACA;;AACJ,SAAK,mBAAL;AACII,MAAAA,KAAK,qBAAQA,KAAR;AAAeI,QAAAA,eAAe,EAAEH,MAAM,CAACG;AAAvC,QAAL;AACA;;AACJ,SAAK,UAAL;AACIJ,MAAAA,KAAK,qBAAQA,KAAR;AAAeH,QAAAA,IAAI,EAAEI,MAAM,CAACJ,IAAP,CAAYQ;AAAjC,QAAL;AACA;;AACJ,SAAK,iBAAL;AACIL,MAAAA,KAAK,qBAAQA,KAAR;AAAeM,QAAAA,aAAa,EAAEL,MAAM,CAACK;AAArC,QAAL;AACA;;AACJ;AACI;AApBR;;AAsBA,SAAON,KAAP;AACH,CAxBM","sourcesContent":["const initState = {\n    cities: [],\n    city: [],\n    activities: []\n};\n\nexport const rootReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'GET_ACTIVITIES':\n            state = { ...state, activities: action.activities }\n            break;\n        case 'ACTIVITIES_IS_LOADING':\n            state = { ...state, activitiesIsLoading: action.activitiesIsLoading }\n            break;\n        case 'GET_CITIES':\n            state = { ...state, cities: action.cities }\n            break;\n        case 'CITIES_IS_LOADING':\n            state = { ...state, citiesIsLoading: action.citiesIsLoading }\n            break;\n        case 'GET_CITY':\n            state = { ...state, city: action.city.message }\n            break;\n        case 'CITY_IS_LOADING':\n            state = { ...state, cityIsLoading: action.cityIsLoading }\n            break;\n        default:\n            break;\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}