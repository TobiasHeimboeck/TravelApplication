{"ast":null,"code":"import _objectSpread from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initState = {\n  cities: [],\n  city: [],\n  activities: [],\n  user: []\n};\nexport var rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"GET_ACTIVITIES\") {\n    state = _objectSpread({}, state, {\n      activities: action.activities\n    });\n  }\n\n  if (action.type === \"ACTIVITIES_IS_LOADING\") {\n    state = _objectSpread({}, state, {\n      activitiesIsLoading: action.activitiesIsLoading\n    });\n  }\n\n  if (action.type === \"GET_CITIES\") {\n    state = _objectSpread({}, state, {\n      cities: action.cities\n    });\n  }\n\n  if (action.type === \"CITIES_IS_LOADING\") {\n    state = _objectSpread({}, state, {\n      citiesIsLoading: action.citiesIsLoading\n    });\n  }\n\n  if (action.type === \"GET_CITY\") {\n    state = _objectSpread({}, state, {\n      city: action.city.message\n    });\n  }\n\n  if (action.type === \"CITY_IS_LOADING\") {\n    state = _objectSpread({}, state, {\n      cityIsLoading: action.cityIsLoading\n    });\n  }\n\n  if (action.type === \"GET_USER\") {\n    state = _objectSpread({}, state, {\n      user: action.user\n    });\n  }\n\n  if (action.type === \"USER_IS_LOADING\") {\n    state = _objectSpread({}, state, {\n      userIsLoading: action.userIsLoading\n    });\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/store/reducers/rootReducder.js"],"names":["initState","cities","city","activities","user","rootReducer","state","action","type","activitiesIsLoading","citiesIsLoading","message","cityIsLoading","userIsLoading"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,EADM;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE,EAHE;AAIdC,EAAAA,IAAI,EAAE;AAJQ,CAAlB;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBN,SAAsB;AAAA,MAAXO,MAAW;;AAEtD,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AAClCF,IAAAA,KAAK,qBACEA,KADF;AAEDH,MAAAA,UAAU,EAAEI,MAAM,CAACJ;AAFlB,MAAL;AAIH;;AAED,MAAII,MAAM,CAACC,IAAP,KAAgB,uBAApB,EAA6C;AACzCF,IAAAA,KAAK,qBACEA,KADF;AAEDG,MAAAA,mBAAmB,EAAEF,MAAM,CAACE;AAF3B,MAAL;AAIH;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC9BF,IAAAA,KAAK,qBACEA,KADF;AAEDL,MAAAA,MAAM,EAAEM,MAAM,CAACN;AAFd,MAAL;AAIH;;AAED,MAAIM,MAAM,CAACC,IAAP,KAAgB,mBAApB,EAAyC;AACrCF,IAAAA,KAAK,qBACEA,KADF;AAEDI,MAAAA,eAAe,EAAEH,MAAM,CAACG;AAFvB,MAAL;AAIH;;AAED,MAAIH,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5BF,IAAAA,KAAK,qBACEA,KADF;AAEDJ,MAAAA,IAAI,EAAEK,MAAM,CAACL,IAAP,CAAYS;AAFjB,MAAL;AAIH;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgB,iBAApB,EAAuC;AACnCF,IAAAA,KAAK,qBACEA,KADF;AAEDM,MAAAA,aAAa,EAAEL,MAAM,CAACK;AAFrB,MAAL;AAIH;;AAED,MAAIL,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5BF,IAAAA,KAAK,qBACEA,KADF;AAEDF,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFZ,MAAL;AAIH;;AAED,MAAIG,MAAM,CAACC,IAAP,KAAgB,iBAApB,EAAuC;AACnCF,IAAAA,KAAK,qBACEA,KADF;AAEDO,MAAAA,aAAa,EAAEN,MAAM,CAACM;AAFrB,MAAL;AAIH;;AAED,SAAOP,KAAP;AACH,CA3DM","sourcesContent":["const initState = {\n    cities: [],\n    city: [],\n    activities: [],\n    user: [],\n};\n\nexport const rootReducer = (state = initState, action) => {\n\n    if (action.type === \"GET_ACTIVITIES\") {\n        state = {\n            ...state,\n            activities: action.activities\n        }\n    }\n\n    if (action.type === \"ACTIVITIES_IS_LOADING\") {\n        state = {\n            ...state,\n            activitiesIsLoading: action.activitiesIsLoading\n        }\n    }\n\n    if (action.type === \"GET_CITIES\") {\n        state = {\n            ...state,\n            cities: action.cities\n        }\n    }\n\n    if (action.type === \"CITIES_IS_LOADING\") {\n        state = {\n            ...state,\n            citiesIsLoading: action.citiesIsLoading,\n        }\n    }\n\n    if (action.type === \"GET_CITY\") {\n        state = {\n            ...state,\n            city: action.city.message\n        }\n    }\n    \n    if (action.type === \"CITY_IS_LOADING\") {\n        state = {\n            ...state,\n            cityIsLoading: action.cityIsLoading\n        }\n    }\n\n    if (action.type === \"GET_USER\") {\n        state = {\n            ...state,\n            user: action.user\n        }\n    }\n\n    if (action.type === \"USER_IS_LOADING\") {\n        state = {\n            ...state,\n            userIsLoading: action.userIsLoading\n        }\n    }\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}