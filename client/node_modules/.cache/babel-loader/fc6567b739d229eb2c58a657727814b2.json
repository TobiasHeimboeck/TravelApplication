{"ast":null,"code":"export var getCities = function getCities(cities) {\n  return {\n    type: 'GET_CITIES',\n    cities: cities\n  };\n};\nexport var citiesIsLoading = function citiesIsLoading(_citiesIsLoading) {\n  return {\n    type: 'CITIES_IS_LOADING',\n    citiesIsLoading: _citiesIsLoading\n  };\n};\nexport var fetchCitiesData = function fetchCitiesData() {\n  return function (dispatch) {\n    fetch(\"/cities/all\").then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      dispatch(getCities(result));\n      dispatch(thcitiesIsLoading(false));\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/store/actions/actions.js"],"names":["getCities","cities","type","citiesIsLoading","fetchCitiesData","dispatch","fetch","then","response","json","result","thcitiesIsLoading","catch","e","console","log"],"mappings":"AAAA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AACjC,SAAO;AACNC,IAAAA,IAAI,EAAE,YADA;AAEND,IAAAA,MAAM,EAANA;AAFM,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,eAAe,GAAG,yBAACA,gBAAD,EAAqB;AAChD,SAAO;AACND,IAAAA,IAAI,EAAE,mBADA;AAENC,IAAAA,eAAe,EAAfA;AAFM,GAAP;AAIH,CALM;AAOP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,SAAM,UAACC,QAAD,EAAc;AAChBC,IAAAA,KAAK,CAAC,aAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;AACZL,MAAAA,QAAQ,CAACL,SAAS,CAACU,MAAD,CAAV,CAAR;AACAL,MAAAA,QAAQ,CAACM,iBAAiB,CAAC,KAAD,CAAlB,CAAR;AACL,KALC,EAMDC,KANC,CAMK,UAAAC,CAAC;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,KANN;AAOH,GARD;AASH,CAVM","sourcesContent":["export const getCities = (cities) => {\n    return {\n     type: 'GET_CITIES',\n     cities\n    }\n}\n\nexport const citiesIsLoading = (citiesIsLoading) => {\n    return {\n     type: 'CITIES_IS_LOADING',\n     citiesIsLoading\n    }\n}\n\nexport const fetchCitiesData = () => {\n    return(dispatch) => {\n        fetch(\"/cities/all\")\n        .then(response => response.json())\n        .then(result => {\n            dispatch(getCities(result));\n            dispatch(thcitiesIsLoading(false))\n      })\n      .catch(e => console.log(e));\n    }\n}"]},"metadata":{},"sourceType":"module"}