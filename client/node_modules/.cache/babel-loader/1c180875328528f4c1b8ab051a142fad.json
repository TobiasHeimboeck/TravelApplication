{"ast":null,"code":"import _classCallCheck from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js\";\nimport React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nvar CitiesPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CitiesPage, _React$Component);\n\n  function CitiesPage(props) {\n    var _this;\n\n    _classCallCheck(this, CitiesPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CitiesPage).call(this, props));\n\n    _this.handleChangee = function (e) {\n      var filteredPoets = _this.state.poets;\n      filteredPoets = filteredPoets.filter(function (poet) {\n        var poetName = poet.firstName.toLowerCase() + poet.lastName.toLowerCase();\n        return poetName.indexOf(poetFilter.toLowerCase()) !== -1;\n      });\n\n      _this.setState({\n        filteredPoets: filteredPoets\n      });\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        cityFilter: e.target.value\n      });\n    };\n\n    _this.state = {\n      cityFilter: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CitiesPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCities();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.citiesIsLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(PreNavbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          id: \"header\",\n          className: \"cityTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Cities\"), React.createElement(\"input\", {\n          value: this.state.cityFilter,\n          onChange: this.handleChange,\n          className: \"cityFilter\",\n          type: \"text\",\n          placeholder: \"Search a city\",\n          name: \"Search city\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), this.props.cities.map(function (item, index) {\n          return React.createElement(City, {\n            name: item.name,\n            image: item.image,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          });\n        })));\n      }\n    }\n  }]);\n\n  return CitiesPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities,\n    city: state.city,\n    citiesIsLoading: state.citiesIsLoading\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCities: function getCities() {\n      return dispatch(actionCreator.fetchCitiesData());\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPage);","map":{"version":3,"sources":["/Users/tobias/Documents/Programming/Ubiqum - coding/TravelApplication/client/src/containers/CitiesPage.js"],"names":["React","Sidebar","PreNavbar","City","connect","actionCreator","CitiesPage","props","handleChangee","e","filteredPoets","state","poets","filter","poet","poetName","firstName","toLowerCase","lastName","indexOf","poetFilter","setState","handleChange","cityFilter","target","value","getCities","citiesIsLoading","cities","map","item","index","name","image","Component","mapStateToProps","city","mapDispatchToProps","dispatch","fetchCitiesData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sidebar from '../components/Sidebar.js';\nimport PreNavbar from '../components/PreNavbar.js';\nimport City from '../components/City.js';\nimport { connect } from \"react-redux\";\nimport * as actionCreator from '../store/actions/actions.js';\n\nclass CitiesPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {cityFilter: \"\"};\n    }\n\n    handleChangee = (e) => {\n        let filteredPoets = this.state.poets\n    filteredPoets = filteredPoets.filter((poet) => {\n      let poetName = poet.firstName.toLowerCase() + poet.lastName.toLowerCase()\n      return poetName.indexOf(\n        poetFilter.toLowerCase()) !== -1\n    })\n    this.setState({\n      filteredPoets\n    })\n\n    }\n\n    handleChange = (e) => {\n        this.setState({cityFilter: e.target.value});\n    }\n\n    componentDidMount() {\n        this.props.getCities();\n    }\n\n    render() {\n        if (this.props.citiesIsLoading) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <div>\n                    <Sidebar />\n                    <PreNavbar />\n                    <div>\n                        <h1 id=\"header\" className=\"cityTitle\">Cities</h1>\n                        <input value={this.state.cityFilter} onChange={this.handleChange} className=\"cityFilter\" type=\"text\" placeholder=\"Search a city\" name=\"Search city\"></input>\n                        {\n                            this.props.cities.map((item, index) => (\n                                <City name={item.name} image={item.image} key={index} />\n                            ))\n                        }\n                    </div>\n                </div>\n            ); \n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {cities: state.cities, city: state.city, citiesIsLoading: state.citiesIsLoading}\n}\n  \nfunction mapDispatchToProps(dispatch) {\n    return {\n        getCities: () => dispatch(actionCreator.fetchCitiesData()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CitiesPage);"]},"metadata":{},"sourceType":"module"}